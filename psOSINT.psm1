# Generated by: krishpranav


# dot-source all function files
Get-ChildItem -Path $PSScriptRoot\*.ps1 | Foreach-Object{ . $_.FullName }

# Export all commands
Export-ModuleMember -Function @(Get-Command -Module $ExecutionContext.SessionState.Module)

# Module functions
function Reset-SslDefaults {
    [Net.ServicePointManager]::SecurityProtocol = $CurrentSecurityProtocol
}

function Format-Response {
    if ($ReponseType -eq 'CSV') {
        $Response | 
            ConvertFrom-Csv
    } elseif ($ReponseType -eq 'JSON') {
        $Response | 
            ConvertFrom-Json -AsHashTable | 
            ConvertTo-Json | 
            ConvertFrom-Json
    } elseif ($ReponseType -eq 'OBJ') {
        $Response | 
            Select-Object -ExpandProperty Results
    } else {
        $Response
    }
}

function Search-Api {
    $BaseCommand = "Invoke-RestMethod {0} -Method $Method -TimeoutSec $Timeout -Uri '$Uri' -UserAgent '$UserAgent'"

    # Initial Response
    $Response = $(iex -Command $("$BaseCommand" -f $ExtraRequestParams))

    # Combined responses from other PulseDive endpoints
    if ($Uri -match '.*pulsedive.*' -and $Uri -notmatch '.*sanitize=true') {
        if ($Endpoint -eq 'indicator') {
            $Iid = $Response.iid
            $Linked = "@{iid='$Iid';get='links';pretty=1;key='$ApiKey'}"
            $Properties = "@{iid='$Iid';get='properties';pretty=1;key='$ApiKey'}"
            $Response = [pscustomobject]@{
                Value=$Response
                Linked=$(iex -Command $("$BaseCommand" -f "-Body $Linked"))
                Properties=$(iex -Command $("$BaseCommand" -f "-Body $Properties"))
            }
        } elseif ($Endpoint -eq 'threat') {
            $Tid = $Response.tid
            $Summary = "@{tid='$Tid';get='links';summary=1;splitrisk=1;pretty=1;key='$ApiKey'}"
            $Linked = "@{tid='$Tid';get='links';pretty=1;key='$ApiKey'}"
            $Response = [pscustomobject]@{
                Value=$Response
                Summary=$(iex -Command $("$BaseCommand" -f "-Body $Summary")) -split '\n' | ? {$_ -notlike '*"":*'} | ConvertFrom-Json
                Linked=$(iex -Command $("$BaseCommand" -f "-Body $Linked"))
            }
        } elseif ($Endpoint -eq 'feed') {
            $Fid = ($Response -split '\n' | ? {$_ -notlike '*"":*'} | ConvertFrom-Json).fid
            $Linked = "@{fid='$Fid';get='links';pretty=1;key='$ApiKey'}"
            $Response = [pscustomobject]@{
                Name=$Response -split '\n' | ? {$_ -notlike '*"":*'} | ConvertFrom-Json
                Linked=$(iex -Command $("$BaseCommand" -f "-Body $Linked"))
            }
        }
    }

    Format-Response
}

Function Set-ModuleDefaults {
    $global:Method = 'GET'
    $global:Timeout = 30
    $global:UserAgent = [Microsoft.PowerShell.Commands.PSUserAgent]::Firefox
}

Function Set-SslDefaults {
    $global:CurrentSecurityProtocol = [Net.ServicePointManager]::SecurityProtocol
    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls -bor [Net.SecurityProtocolType]::Tls11 -bor [Net.SecurityProtocolType]::Tls12
}